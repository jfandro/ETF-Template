
@{
    ViewBag.Title = "Create";
    <link rel="stylesheet" href="https://jouelacommeliliane.com/Content/waterfall.css" />

}

@section header {
    <section class="jumbotron section-header header-image" style="background-image:url('https://i.pinimg.com/originals/ae/32/50/ae32501f76b85d2a3cc01ebdb5860385.jpg')">
        <div class="container">
            <h1 class="text-center">Create and Report</h1>
            <p class="lead text-center">Analyse de portefeuille</p>
        </div>
    </section>
}

<section class="section-b">
    <div class="container">
        <p>
            <span class="logo"><i class="glyphicon glyphicon-info-sign"></i></span>
            Après l'expérience de la restitution d'un portefeuille modèle en mode data et graphiques, expérience en lecture suele, nous vous proposons un aperçu des fonctions de gestion de portefeuilles as a service de LILI.
            Cette expérience intègre des actions en lecture (GET) et en écriture (POST). Elle se déroule en plusieurs étapes distinctes :
            <ul>
                <li>Création d'un portefeuille persistent ou temporaire,</li>
                <li>Chargement de son activité avec un inventaire,</li>
                <li>Visualisation de ses résultats avec un premier graphique de type cascade ou <em>waterfall</em>.</li>
                <li>Enfin, nous procèderons à la saisie mauelle d'opérations sans quitter le site;</li>
            </ul>
        </p>
        <p>
            <b>IMPORTANT</b> L'API donne un accès sécurisé aux services distants de Lili, en particulier son moteur de tenues de positions
            de contrôles des risques, de liquidités ... Pour cette première expérience, nous allons vous montrer que la notion dite de <b>persistence</b>
            Selon vos besoins, un portefeuille peut être <b>persistent</b> : sa structure, son activité et ses résultats seront conservés
            en base de données, privée ou partagée, hébergée sur un serveur distant à des fins de futures requêtes.
            ou <b>temporaire</b>  (sa structure, son activité et ses résultats sont conservés dans le cache du serveur pour un usage éphémère
            limité à 15 minutes dans le cas présent). Cette faculté fait partie des options compétitives de l'offre.
        </p>

    </div>
</section>

<section class="section-c">
    <div class="container">
        <h2>Création d'un portefeuille</h2>
        <form class="creation-form" method="post">

            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon">Nom</div>
                    <input type="text" class="form-control" id="Name" name="Name" value="" placeholder="Donnez un nom à votre portefeuille" />
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Date de départ</div>
                            <input type="date" class="form-control" id="StartDate" name="StartDate" value="2018-01-03" />
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-lg-offset-1">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Niveau de risques</div>
                            <input type="number" class="form-control" id="RiskLevel" name="RiskLevel" value="4" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i> Clef privée</div>
                    <input type="text" class="form-control portfolio-key" id="Code" name="Code" value="" disabled="disabled" />
                </div>
            </div>

            <div class="form-group">
                Indiquez si vous souhaitez que le portefeuille crée soit conservé en base ou en cache sur le serveur
                <input type="checkbox" name="Persistence" id="Persistence" value="true" class="checkbox-switch" data-on-text="Persistence" data-off-text="Cache" />
            </div>

            <input type="hidden" value="15" name="minutes" id="minutes" />

            <p>
                Avant de lancer la création ci-après, sachez que si celle-ci est réussie, l'API renvoie une clef unique à ce portefeuille,
                clef que nous utiliserons par la suite.
            </p>

            <p class="text-right">
                <button type="submit" class="btn btn-primary">Création du portefeuille</button>
            </p>

        </form>
    </div>
</section>



<section class="section-d">
    <div class="container">
        <h2>Backtesting</h2>
        <p>
            Pour cette seconde étape, nous vous proposons une expérience de <b>backtesting</b>,
            c'est à dire une expérience où vous allez rejouer la vie d'un portefeuille.
            Déclinez l'inventaire d'un portefeuille (celui que vous venez de créer).
            L'intégration de cet inventaire exécute la valorisation quotidienne du portefeuille, ainsi que les calculs de performances et de risques.
            Les résultats sont affichés dans l'étape suivante.
            L'inventaire est ici un tableau de codes ISIN associés à des poids (exemple 10 signifie que le titre représente 10% de l'actif net du portefeuille à la date d'inventaire).
            La date d'inventaire est proposée par défault au 3 janvier 2018.
        </p>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-lg-5 col-md-6">
                <form class="operations-form">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Clef privée</div>
                            <input type="text" class="form-control portfolio-key" id="PortfolioCode" name="PortfolioCode" value="" placeholder="Indiquez les 28 caractères de la clef de votre portefeuille" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Inventaire au</div>
                            <input type="date" class="form-control" id="ValueDate" name="ValueDate" value="2018-01-03" />
                        </div>
                    </div>

                    <div class="form-group">
                        Mode d'insertion
                        <input type="checkbox" name="ResetPortfolio" id="ResetPortfolio" value="false" class="checkbox-switch" data-size="small" data-on-text="Ajouter" data-off-text="Initialiser" />
                    </div>

                    <div class="form-group">

                        @for (int i = 0; i < 7; i++)
                        {
                            var name1 = "Allocations[" + i + "].SecurityID";
                            var name2 = "Allocations[" + i + "].Weight";
                            <div class="row">
                                <div class="col-xs-6 col-lg-8">
                                    <div class="input-group">
                                        <input type="text" name="@name1" value="" class="form-control" placeholder="ISIN ou ticker" />
                                    </div>
                                </div>
                                <div class="col-xs-3 col-lg-4">
                                    <div class="input-group">
                                        <input type="number" name="@name2" value="10" max="100" min="0" class="form-control text-right" />
                                        <span class="input-group-addon">%</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <p class="text-right">
                        <button type="submit" class="btn btn-primary">Importer</button>
                    </p>

                </form>
            </div>

            <div class="col-lg-7 col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3>Monitoring</h3>
                    </div>
                    <div class="panel-body">
                        <p>Pour ce test, voici une liste de codes ISIN à copier/coller ci-contre pour la saisie de votre inventaire.</p>
                        <dl>
                            <dd>LU1646359452</dd>
                            <dd>FR0010345371</dd>
                            <dd>FR0000975930</dd>
                        </dl>
                        <p id="results1" class=""></p>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>

<section class="section-b">
    <div class="container">
        <h2>Résultats sur 12 mois</h2>
        <p>
            Pour cette étape, vous n'avez rien à faire, si ce n'est qu'à visualiser les résultats de votre portefeuille
            cumulés sur les douze derniers mois d'activité.
            Nous prenons un waterfall, autrement un graphique en cascades. D'autres widgets pourraient être déployés sur cette étape,
            c'est ce que nous allons voir dans la <a href="/Home/Positions">troisième expérience</a> centrée sur les technologies de datavisualisation.
        </p>
        <div id="results" class="waterfall-container"></div>
    </div>
</section>


@section scripts {

    <!-- Latest version of d3 librairies -->
    <script src="https://lili.am/Scripts/d3/v5/d3.js" type="text/javascript"></script>
    <script src="https://lili.am/scripts/d3/v5/waterfall-5.1.js" type="text/javascript"></script>

    <script>

        $(document).ready(function () {

            // First, we create a new instance of portfolios controller to get and post data with LILI API
            var ptf = new LoyolApp.PortfolioController();
            var ast = new LoyolApp.AssetsController();

            // render the select items
            ptf.select($('.select-portfolios'));
            ast.select($('.select-funds'));

            // This is for displaying smart switcher
            $('.checkbox-switch').bootstrapSwitch();

            // When we submit for a creation of a portfolio
            $('form.creation-form').submit(function () {
                var params = $(this).serialize();
                ptf.post('create', params, function (result) {
                    $('.portfolio-key').val(result.code);
                    ptf.select($('.select-portfolios'));
                })
                return false;
            });

            $('.operations-form').submit(function () {
                var params = $(this).serialize();
                ptf.post('upload', params, function (result) {
                    $('#results1').addClass('text-success');
                    $('#results1').html('Votre inventaire a été chargé sur le serveur Lili avec succès. Ce portefeuille est valorisé depuis sa date de départ et désormais interrogeable pour de nouvelles analyses graphiques présentées ci-dessous.');
                    // Call data requested for a waterfall monthly results
                    var params = { code: $('#PortfolioCode').val() };
                    ptf.get('PnLBreakdowns', params, function (data) {
                        // erase previous content
                        $('#results').empty();
                        // Then create a local widget for a waterfall
                        var wf = new waterfall('#results');
                        // and load data
                        wf.load(data, function () { });
                    });
                })
                return false;
            });

        });

    </script>
}
