
@{
    ViewBag.Title = "Create";
    <link rel="stylesheet" href="https://jouelacommeliliane.com/Content/waterfall.css" />

}
<h1>La gestion de portefeuilles ... as a service</h1>
<div class="well">
    <span class="logo"><i class="glyphicon glyphicon-info-sign"></i></span>
    Après l'expérience du reporting client (lecture lecture), nous vous proposons un aperçu des fonctions IBOR as a service de LILI.
    Cette expérience intègre des actions en lecture (GET) et en écriture (POST), et se déroule en 3 étapes distinctes pour ce showroom :
    <ul>
    <li>Création d'un portefeuille persistent ou temporaire,</li>
    <li>Chargement de son activité avec un inventaire,</li>
    <li>Visualisation de ses résultats avec un graphique de type cascade ou <em>waterfall</em>.</li>
    </ul>
    Afin de rendre fluide l'expérience, nous utiliserons un dénominateur commun pour ces 3 étapes : la clef du portefeuille. 
</div>

<h2>Etape #1 : création de portefeuille</h2>

<p><b>IMPORTANT</b> L'API donne un accès sécurisé aux services du moteur de positions (via une couche de controleurs) et non à une base de données.
    Ainsi, et selon vos besoins, un portefeuille peut être <b>persistent</b> (sa structure, son activité et ses résultats sont conservés en base de données 
    privée ou partagée sur le serveur distant à des fins de futures requêtes), 
    ou <b>temporaire</b>  (sa structure, son activité et ses résultats sont conservés dans le cache du serveur pour un usage éphémère 
    limité à 15 minutes dans le cas présent). Cette faculté fait partie des options compétitives de l'offre.
 </p>

<div>
    <form class="creation-form" method="post">
        
        <div class="form-group">
            <div class="input-group">
                <div class="input-group-addon">Nom</div>
                <input type="text" class="form-control" id="Name" name="Name" value="" placeholder="Donnez un nom à votre portefeuille" />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-3">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">Date de départ</div>
                        <input type="date" class="form-control" id="StartDate" name="StartDate" value="2018-01-03" />
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-lg-offset-1">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">Niveau de risques</div>
                        <input type="number" class="form-control" id="RiskLevel" name="RiskLevel" value="4" />
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <div class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i> Clef privée</div>
                <input type="text" class="form-control portfolio-key" id="Code" name="Code" value="" disabled="disabled" />
            </div>
        </div>

        <div class="form-group">
            Indiquez si vous souhaitez que le portefeuille crée soit conservé en base ou en cache sur le serveur
            <input type="checkbox" name="Persistence" id="Persistence" value="true" class="checkbox-switch" data-on-text="Persistence" data-off-text="Cache" />
        </div>

        <input type="hidden" value="15" name="minutes" id="minutes" />

        <p>Avant de lancer la création ci-après, sachez que si celle-ci est réussie, l'API renvoie une clef unique à ce portefeuille,
        clef que nous utiliserons par la suite.</p>
            
        <p class="text-right">
            <button type="submit" class="btn btn-primary">Création du portefeuille</button>
        </p>

    </form>
</div>

<h2>Etape #2 : chargement de son activité passée</h2>

<p>
    Pour cette seconde étape, vous allez énumérer l'inventaire de votre portefeuille nouvellement crée (reprise de sa clef privée).
    L'intégration de cet inventaire exécute la valorisation quotidienne du portefeuille, ainsi que les calculs de performances et de risques.
    Les résultats sont affichés dans l'étape suivante.
    L'inventaire est ici un tableau de codes ISIN associés à des poids (exemple 10 signifie que le titre représente 10% de l'actif net du portefeuille à la date d'inventaire).
    La date d'inventaire est proposée par défault au 3 janvier 2018. 
</p>

<div class="row">
    <div class="col-lg-5 col-md-6">
        <form class="operations-form">
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon">Clef privée</div>
                    <input type="text" class="form-control portfolio-key" id="PortfolioCode" name="PortfolioCode" value="" placeholder="Indiquez les 28 caractères de la clef de votre portefeuille" />
                </div>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon">Inventaire au</div>
                    <input type="date" class="form-control" id="ValueDate" name="ValueDate" value="2018-01-03" />
                </div>
            </div>

            <div class="form-group">
                Mode d'insertion
                <input type="checkbox" name="ResetPortfolio" id="ResetPortfolio" value="false" class="checkbox-switch" data-size="small" data-on-text="Ajouter" data-off-text="Initialiser" />
            </div>

            <div class="form-group">

                @for (int i = 0; i < 7; i++)
            {
                    <div class="row">
                        <div class="col-xs-6 col-lg-8">
                            <div class="input-group">
                                <input type="text" name="ISIN" value="" class="form-control" placeholder="Entrez un code ISIN" />
                            </div>
                        </div>
                        <div class="col-xs-3 col-lg-4">
                            <div class="input-group">
                                <input type="number" name="Weight" value="10" max="100" min="0" class="form-control text-right" />
                                <span class="input-group-addon">%</span>
                            </div>
                        </div>
                    </div>
                }
            </div>



            <p class="text-right">
                <button type="submit" class="btn btn-primary">Importer</button>
            </p>

        </form>
    </div>

    <div class="col-lg-7 col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3>Monitoring</h3>
            </div>
            <div class="panel-body">
                <p>Pour ce test, voici une liste de codes ISIN à copie/coller ci-contre pour la saisie de votre inventaire.</p>
                <dl>
                    <dd>LU1646359452</dd>
                    <dd>FR0010345371</dd>
                    <dd>FR0000975930</dd>
                </dl>
                <p id="results1" class=""></p>
            </div>
        </div>
    </div>
</div>

<h2>Etape #3 :  affichage des résultats</h2>

<p>
    Pour cette troisième étape de l'expérience, vous n'avez rien à faire, si ce n'est qu'à visualiser les résultats de votre portefeuille 
    résultats cumulés sur les douze derniers mois d'activité.
    Nous prenons un waterfall, autrement un graphique en cascades. D'autres widgets pourraient être déployés sur cette étape, 
    c'est ce que nous allons voir dans la <a href="/Home/Positions">troisième expérience</a> centrée sur les technologies de datavisualisation.
</p>

<div id="results" class="waterfall-container"></div>

    @section scripts {

    <!-- Latest version of d3 librairies -->
    <script src="https://jouelacommeliliane.com/scripts/d3/d3.js" type="text/javascript"></script>
    <script src="https://jouelacommeliliane.com/scripts/d3/waterfall-1.0.js" type="text/javascript"></script>

        <script>

            $(document).ready(function () {

                // First, we create a new instance of portfolios controller to get and post data with LILI API
                var ptf = new LoyolApp.PortfolioController();

                // This is for displaying smart switcher
                $('.checkbox-switch').bootstrapSwitch();

                // When we submit for a creation of a portfolio
                $('form.creation-form').submit(function () {
                    var data = $(this).serialize();
                    ptf.post(data, 'create', function (result) {
                        $('.portfolio-key').val(result.code);
                    })
                    return false;
                });

                // When we submit for an upload a set of operations link to the current portfolio
                $('form.operations-form').submit(function () {
                    var data = $(this).serialize();
                    ptf.post(data, 'upload', function (result) {
                        $('#results1').addClass('text-success');
                        $('#results1').html('Cet inventaire a été chargé sur le serveur Lili avec succès. Ce portefeuille est valorisé depuis sa date de départ et désormais interrogeable pour de nouvelles analyses graphiques présentées ci-dessous.');
                        // Call data requested for a waterfall monthly results
                        ptf.get($('#PortfolioCode').val(), 'PnLBreakdowns', function (data) {
                            // Then create widget
                            var wf = new waterfall('#results');
                            // and load data 
                            wf.load(data, function () { });
                        });
                    })
                    return false;
                });

            });

        </script>
    }
