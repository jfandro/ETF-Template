
@{
    ViewBag.Title = "Benchmarks";
}
<link href="~/Content/mydataviz.css" rel="stylesheet" />

@section header {
    <section class="jumbotron section-header header-image" style="background-image:url('https://i.pinimg.com/originals/ae/32/50/ae32501f76b85d2a3cc01ebdb5860385.jpg')">
        <div class="container">
            <h1 class="text-center">Comparateur</h1>
            <p class="lead text-center">Positionnez vos offres dans la compétition</p>
        </div>
    </section>
}

<section class="section-b">
    <div class="container">
        <p>
            Sur cette page, nous allons nous intéresser aux services qui comparent
            un portefeuille à une liste de fonds de même classe d'actifs et de même profil de risques. Pour cela,
            nous afficherons à la fois les données dans un tableau et dans un graphique à plots performances/risques.
        </p>
        <p>
            Nous allons en premier lieu renseigner une clef privée de portefeuille, ce dernier pouvant être persistent (conservées en base de données)
            ou en cache (voir création de portefeuilles). Indiquez ensuite la période d'analyse à partir de laquelle s'effectuera la comparaison.
        </p>

        <hr style="margin:50px 0;" />

        <div class="form-inline row">
            <div class="form-group col-sm-5">
                <div class="input-group">
                    <div class="input-group-addon">Modèle</div>
                    <select id="code" name="code" class="form-control select-portfolios"></select>
                </div>
            </div>
            <div class="form-group col-sm-5">
                <label class="control-label">Calcul </label>
                <select id="depth" class="form-control">
                    <option value="YTD">Depuis le 1er janvier</option>
                    <option value="MTD">Depuis le 1er du mois</option>
                    <option value="1Y">Depuis 1 an</option>
                </select>
            </div>
            <div class="form-group col-sm-2">
                <button type="button" class="btn btn-primary btn-benchmark">Afficher le comparatif</button>
            </div>
        </div>
    </div>
</section>

<section class="section-b">
    <div class="container">
        <div class="row" style="margin-top:50px;">
            <div class="col-md-6">
                <div class="table-responsive">
                    <table id="benchmark-table" class="table table-hover table-condensed benchmark-chart" data-kpi-type="table" data-kpi-sort="yld" data-group="off" data-kpi-domain="instruments" data-kpi-group="off" data-page-size="8" data-btn-next="#nextb" data-btn-last="#lastb" data-text-size="#sizeb" data-text-begin="#beginb" data-text-end="#endb"></table>
                </div>
                <div class="row">
                    <p id="paging" class="col-xs-12">
                        Afficher <span id="beginb"></span>-<span id="endb"></span> sur <span id="sizeb"></span> fonds.
                        <input id="lastb" class="btn btn-sm" type="button" value="Last" onclick="javascript: $k.widget('#benchmark-table').last()" />
                        <input id="nextb" class="btn btn-sm" type="button" value="Next" onclick="javascript: $k.widget('#benchmark-table').next()" />
                    </p>
                </div>
            </div>
            <div class="col-md-6 hidden-xs">
                <div id="benchmark-plots" class="benchmark-chart row-chart chart-xs" data-kpi-type="plots" data-x-axis="Performance" data-y-axis="Volatilité">
                    <p class="text-center header-chart">
                        <a class="reset" href="javascript:$k.reset('#benchmark-plots');" style="display: none;"><i class="fa fa-undo"></i></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="container">
    <h2>Implémentation</h2>

    <div class="well">
        <p class="text-info">
            S'agissant des widgets de cette page, on retrouve la même technique d'intégration. Sur cette page, sont déclarés
            les librairies open source dc.js et crossfilter.js qui vont permettre la dépendance des widgets.
            Cependant pour cette expérience, nous avons écrit notre propre script de graphes afin de modifier le contenu du tableau
            et le format des données restituées.
        </p>
    </div>

<pre class="prettyprint"><xmp>
<!-- Latest version of d3 librairies -->
<script src="https://lili2.am/Scripts/d3/d3.js" type="text/javascript"></script>
<!-- Latest version of crossfilter librairies -->
<script src="https://lili2.am/Scripts/Crossfilter/crossfilter.js" type="text/javascript"></script>
<!-- Latest version of dc librairies -->
<script src="https://lili2.am/Scripts/dc/2.1.7/dc.js" type="text/javascript"></script>
</xmp></pre>
    <p>
        Pour personnaliser notre tableau comparatif, nous avons simplement fait une copie du script proposé par défaut (instrument-charts),
        script que nous avons enregistré sur notre serveur pour édition. Nous avons ici retiré quelques colonnes et redirigé certains liens.
    </p>
<pre class="prettyprint"><xmp>
<!-- IMPORTANT Local version of widgets instrument charts -->
<script src="~/Scripts/instruments-local-charts.js" type="text/javascript"></script>
</xmp></pre>
    <p>Chaque élément pour widget a une propriété <span class="atn">data-chart</span> permettant de définir le type de widget qui sera déployé au sein de l'élément.</p>
<pre class="prettyprint"><xmp>
<div id="pnl-counter" class="portfolio-chart number" data-chart="number" data-number="pnl"></div>
<div id="rating-pie" class="portfolio-chart pie-chart" data-chart="pie" data-dimension="rating">
    ...
</div>
</xmp>
</pre>


</section>






@section scripts {
    <script src="~/Scripts/instrumentsController.js"></script>

    <!-- Latest version of d3 librairies -->
    <script src="https://lili2.am/Scripts/d3/d3.js" type="text/javascript"></script>
    <!-- Latest version of crossfilter librairies -->
    <script src="https://lili2.am/Scripts/Crossfilter/crossfilter.js" type="text/javascript"></script>
    <!-- Latest version of dc librairies -->
    <script src="https://lili2.am/Scripts/dc/2.1.7/dc.js" type="text/javascript"></script>
    <!-- Latest version of calculations on arrays -->
    <script src="https://lili2.am/Scripts/jquery-array-stats.js" type="text/javascript"></script>
    <!-- Local version of widgets instruments charts -->
    <script src="~/Scripts/instruments-local-charts.js" type="text/javascript"></script>


    <script>

            $(document).ready(function () {

                // First, we create a new instance of portfolios controller to get data from server with LILI API
                $p = new LoyolApp.PortfolioController();
                $p.select($('.select-portfolios'));

                // create a new instance of portfolioCharts in charge of widgets management
                $k = new kpiCharts('');
                // we link all the element marked as benchmark-chart
                $k.group($('.benchmark-chart'));

                // button to display portfolio risk map
                $('.btn-benchmark').click(function () {
                    // As option, we use here STD for 'Start To Date'; change to YTP or 1M or  ....
                    var params = { code: $('#code').val(), option: $('#depth').val() };
                    // Get the data from the server in Json format by calling the method BenchmarkKpis
                    $p.get('BenchmarkKpis', params, function (results) {
                        // Then we populate the widgets with kpis
                        $k.loaddata(results.Kpis);
                    });
                })

            });


    </script>
}
